/* ðŸŒŠ Cards snippet for Obsidian*/
/* MIT License | Copyright (c) Stephan Ango (@kepano)
   author: @kepano : https://github.com/sponsors/kepano (version: 3.0.1)
   Tweaked by @Seniblue for the Underwater theme : (https://github.com/Seniblue/Underwater/)
*/

body {
  --cards-min-width: 180px;
  --cards-max-width: 1fr;
  --cards-mobile-width: 120px;
  --cards-image-height: 200px;
  --cards-padding: 1.2em;
  --cards-image-fit: contain;
  --cards-background: var(--base);
  --cards-border-width: 1px;
  --cards-aspect-ratio: auto;
  --cards-columns: repeat(auto-fit, minmax(var(--cards-min-width), var(--cards-max-width)));
}

@media (max-width: 400pt) {
body {
    --cards-min-width:var(--cards-mobile-width); 
}}
.cards.table-100 table.dataview tbody,
.table-100 .cards table.dataview tbody {
    padding: 0.25rem 0.75rem;
}
.cards table.dataview {
  --table-width: 100%;
  --table-edge-cell-padding-first: calc(var(--cards-padding)/2);
  --table-edge-cell-padding-last: calc(var(--cards-padding)/2);
  --table-cell-padding: calc(var(--cards-padding)/3) calc(var(--cards-padding)/2);
  line-height: 1.3;
}
.cards table.dataview tbody {
    clear: both;
    padding: 0.5rem 0;
    display: grid;
    grid-template-columns: var(--cards-columns);
    grid-column-gap: 0.75rem;
    grid-row-gap: 0.75rem;
}
.cards table.dataview > tbody > tr {
    background-color: var(--cards-background) !important;
    border: var(--cards-border-width) solid var(--background-modifier-border);
    display: flex;
    flex-direction: column;
    margin: 2px;
    padding: 0 0 calc(var(--cards-padding)/3) 0;
    border-radius: 6px;
    overflow: hidden;
    transition: box-shadow 0.15s linear;
    max-width: var(--cards-max-width);
    height: auto;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
}
.cards table.dataview > tbody > tr:hover {
    border: var(--cards-border-width) solid var(--highlight-med);
    box-shadow: 0 4px 6px 0px rgba(0, 0, 0, 0.05), 0 1px 3px 1px rgba(0, 0, 0, 0.025);
    transition: box-shadow 0.15s linear;
}
.cards table.dataview tbody > tr > td:first-child a {
    text-align: center;
    display: block;
}
.cards table.dataview tbody > tr > td:last-child {
    border: none;
}
.cards table.dataview tbody > tr > td:not(:first-child) {
    font-size: calc(var(--table-text-size) * .9);
    color: var(--text-normal);
    text-align: justify;
}
.cards table.dataview tbody > tr > td > * {
    padding: calc(var(--cards-padding)/3) 0;
}
.cards table.dataview tbody > tr > td:not(:last-child):not(:first-child) {
    padding: 4px 0;
    border-bottom: 1px solid var(--background-modifier-border);
    width: calc(100% - var(--cards-padding));
    margin: 0 calc(var(--cards-padding)/2);
}
.cards table.dataview tbody > tr > td a {
    text-decoration: none;
}
.cards table.dataview tbody > tr > td > button {
    width: 100%;
    margin: calc(var(--cards-padding)/2) 0;
}
.cards table.dataview tbody > tr > td:last-child > button {
    margin-bottom: calc(var(--cards-padding)/6);
}
.cards table.dataview tbody > tr > td > ul {
    width: 100%;
    padding: 0.25em 0 !important;
    margin: 0 auto !important;
}
.cards table.dataview tbody > tr > td:has(img) {
    padding: 0 !important;
    background-color: var(--cards-background);
    display: block;
    margin: 0;
    width: 100%;
}
.cards table.dataview tbody > tr > td img {
    aspect-ratio: var(--cards-aspect-ratio);
    width: 100%;
    object-fit: var(--cards-image-fit);
    max-height: var(--cards-image-height);
    background-color: var(--cards-background);
    vertical-align: bottom;
    border-radius: 5px;
}
.cards table.dataview > tbody > tr img {
  opacity: 0.9;
  transition: opacity 0.15s linear;
}
.cards table.dataview > tbody > tr:hover img {
  opacity: 1;
}

.markdown-source-view.mod-cm6.cards .dataview.table-view-table > tbody > tr > td,
.trim-cols .cards table.dataview tbody > tr > td {
  white-space: normal;
}

/* Block button */
.markdown-source-view.mod-cm6.cards .edit-block-button {
  top: -1px;
  right: 28px;
  opacity: 1;
}

.cards table.dataview th {
    display: none;
}

.cards img:hover {
  transform: none !important;
}
